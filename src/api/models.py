'''Pydantic models for request and response payloads.'''

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class ProcessReportRequest(BaseModel):
    '''Inbound payload for triggering report processing.'''

    text: str = Field(..., description='Free-text radiology report content')
    patient_id: Optional[str] = Field(
        default=None, description='Optional identifier linking the report to a patient'
    )
    modality: Optional[str] = Field(
        default=None, description='Imaging modality (e.g., CT, MRI, XR)'
    )


class ProcessReportResponse(BaseModel):
    '''Response emitted after report processing completes.'''

    tasks: List[Dict[str, Any]] = Field(
        default_factory=list, description='Structured follow-up tasks generated by the agent'
    )
    guideline_hits: List[Dict[str, Any]] = Field(
        default_factory=list,
        description='Guideline passages retrieved during reasoning',
    )
    trace_id: str = Field(..., description='Correlation identifier for tracing requests')
