apiVersion: apps/v1
kind: Deployment
metadata:
  name: audra-api
  namespace: audra-rad
  labels:
    app: audra-api
    component: application
spec:
  replicas: 2  # For high availability
  selector:
    matchLabels:
      app: audra-api
  template:
    metadata:
      labels:
        app: audra-api
    spec:
      containers:
        - name: api
          image: YOUR_ECR_REPO/audra-rad:latest  # Replace with your ECR URL
          imagePullPolicy: Always

          ports:
            - containerPort: 8000
              name: http
              protocol: TCP

          env:
            # Load config from ConfigMap
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: audra-rad-config
                  key: LOG_LEVEL
            - name: NIM_LLM_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: audra-rad-config
                  key: NIM_LLM_ENDPOINT
            - name: NIM_EMBEDDING_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: audra-rad-config
                  key: NIM_EMBEDDING_ENDPOINT
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: audra-rad-config
                  key: AWS_REGION

            # Load secrets
            - name: NIM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: audra-rad-secrets
                  key: nim-api-key
            - name: OPENSEARCH_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: audra-rad-secrets
                  key: opensearch-endpoint
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: audra-rad-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: audra-rad-secrets
                  key: aws-secret-access-key

          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "2000m"

          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3

          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: audra-api-service
  namespace: audra-rad
  labels:
    app: audra-api
spec:
  selector:
    app: audra-api
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
  type: LoadBalancer  # Exposes to internet
  sessionAffinity: ClientIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: audra-api-hpa
  namespace: audra-rad
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: audra-api
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
